[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "the-build-vault"
version = "1.0.0"
description = "AI-powered podcast insight extraction system for The Build podcast, inspired by MFM Vault architecture"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "The Build Vault Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"
dependencies = [
    # Core AI/ML dependencies
    "assemblyai>=0.40.2",
    "openai>=1.82.1",
    "langchain>=0.2.11",
    "langchain-openai>=0.1.17",
    "langsmith>=0.1.84",
    # YouTube and media processing
    "python-youtube>=0.9.7",
    "youtube-data-api>=0.0.20",
    "yt-dlp>=2025.5.22",
    "isodate>=0.6.1",
    # Database and storage
    "supabase>=2.15.2",
    "asyncpg>=0.29.0",
    # Web framework (for web interface)
    "fastapi>=0.115.0",
    "uvicorn>=0.32.0",
    "jinja2>=3.1.0",
    # Utilities and core
    "python-dotenv>=1.1.0",
    "pydantic>=2.0.0",
    "httpx>=0.27.0",
    "aiofiles>=23.2.0",
    "ipykernel>=6.29.5",
    "youtube-dl>=2021.12.17",
    "pandas>=2.2.3",
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
    "requests>=2.32.3",
    "beautifulsoup4>=4.13.4",
    "jupyter>=1.1.1",
    "mesop>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "ruff>=0.6.0",
    "mypy>=1.8.0",
]
search = [
    "meilisearch>=0.31.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/the-build-vault"
Repository = "https://github.com/yourusername/the-build-vault"
Issues = "https://github.com/yourusername/the-build-vault/issues"
Documentation = "https://github.com/yourusername/the-build-vault#readme"

[project.scripts]
# Pipeline scripts
pipeline-orchestrator = "pipeline.pipeline_orchestrator:main"
download-audio = "pipeline.audio_downloader:main"
transcribe = "pipeline.transcription_service:main"
process-segments = "pipeline.segment_processor:main"
extract-insights = "pipeline.insight_extractor:main"
check-status = "pipeline.pipeline_status_checker:main"

# Web interface
start-web = "web.app:main"

[tool.hatch.build.targets.wheel]
packages = ["pipeline", "web", "shared"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
line-length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "pipeline: marks tests as pipeline tests",
    "web: marks tests as web interface tests",
]

[tool.coverage.run]
source = ["pipeline", "web", "shared"]
omit = [
    "tests/*",
    "*/audio_storage/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv]
dev-dependencies = []
